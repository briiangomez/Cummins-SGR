// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGI.Infrastructure;

namespace SGI.Infrastructure.Migrations
{
    [DbContext(typeof(SGIApplicationDataContext))]
    [Migration("20200921042649_AddCoreTables-v1")]
    partial class AddCoreTablesv1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGI.ApplicationCore.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Aux1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnName("Deleted")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Modified")
                        .HasColumnName("Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("SGI.ApplicationCore.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Aux1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("code")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnName("Deleted")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Modified")
                        .HasColumnName("Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SGI.ApplicationCore.Entities.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Aux1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnName("Deleted")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Modified")
                        .HasColumnName("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("SGI.ApplicationCore.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Aux1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnName("Deleted")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .HasColumnName("lastname")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnName("Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SGI.ApplicationCore.Entities.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Aux1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnName("Deleted")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Modified")
                        .HasColumnName("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SGI.ApplicationCore.Entities.RolePermission", b =>
                {
                    b.HasOne("SGI.ApplicationCore.Entities.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGI.ApplicationCore.Entities.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SGI.ApplicationCore.Entities.UserRole", b =>
                {
                    b.HasOne("SGI.ApplicationCore.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGI.ApplicationCore.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
