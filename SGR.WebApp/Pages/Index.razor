@page "/index"
@using Blazored.LocalStorage
@using System.Security.Claims
@inject NavigationManager navigationManager
@inject ILocalStorageService localStorageService
@inject IAuthorizationService authorizationService

    <center>
        <div class="col-12 card">
            <div class="col-12 row">
                <p>&nbsp;</p>
            </div>
            <div class="col-12 row">
                <div class="col-6" style="border-right:groove">
                    <br />
                    <br />
                    <img src="/img/logo.png" width="500px" height="200px" />
                </div>
                <div class="col-6" style="border-left:thick">
                    <p>&nbsp;</p>
                    <p>&nbsp;</p>
                    Bievenido a TheaBot
                    <p>&nbsp;</p>
                    Sistema de Gestion de Camaras y Eventos
                    <p>&nbsp;</p>
                    TFI - Belaustegui y Gomez Pereyra - Año 2020
                </div>
            </div>
            <div class="col-12 row">
                <p>&nbsp;</p>
            </div>
        </div>
    </center>



@code {
    
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    ClaimsPrincipal user;

    bool IsUserAuthenticated;
    bool IsPublisher;
    bool IsSeniorEmployee;

    public int Count { get; set; } = 400;

    protected override async Task OnInitializedAsync()
    {
        user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
            IsUserAuthenticated = true;

        if (user.IsInRole("Publisher"))
            IsPublisher = true;

        if ((await authorizationService.AuthorizeAsync(user, "SeniorEmployee")).Succeeded)
            IsSeniorEmployee = true;
    }
}
